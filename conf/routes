# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Enable webjar based resources to be returned
GET        /webjars/*file                    controllers.WebJarAssets.at(file)

# Home page
GET        /                                 controllers.Application.index()

GET /api/v1/events                          controllers.Application.connectEventsSSE()

# Extraction Run
GET  /api/v1/extractionruns                         controllers.ExtractionRunController.listAsJson
POST /api/v1/extractionruns                         controllers.ExtractionRunController.create

GET  /api/v1/extractionruns/extraction-results      controllers.ExtractionResultsController.getAll
GET  /api/v1/extractionruns/:id                     controllers.ExtractionRunController.getById(id)
GET  /api/v1/extractionruns/:id/download            controllers.PageController.downloadResourcesOfExtractionRun(id)
GET  /api/v1/extractionruns/:id/page-data           controllers.PageController.listDownloadedDataOfExtractionRun(id)
GET  /api/v1/extractionruns/:id/infobox-extraction  controllers.InfoboxExtractionController.extractExtractionRunResources(id)
GET  /api/v1/extractionruns/:id/extraction-results  controllers.ExtractionResultsController.getExtractionRunResults(id)
GET  /api/v1/extractionruns/:id/list-results        controllers.ExtractionResultsController.listExtractionRunResults(id)
GET  /api/v1/extractionruns/:id/stats               controllers.ExtractionResultsController.getExtractionRunStats(id)
GET  /api/v1/extractionruns/:id/event-stats         controllers.ExtractionResultsController.getExtractionRunEventStats(id)



# SPARQL Queries
GET /api/v1/query/dbpedia/companies                 controllers.SparqlController.queryCompaniesFromDBpedia()
GET /api/v1/companies                               controllers.SparqlController.getCompanieUrisFromFile()

GET  /api/v1/sample                                 controllers.SampleController.getSampleFromFile()
GET  /api/v1/sample/company/generate                controllers.SampleController.generateSample(size: Int, extractionRunId: String)
POST /api/v1/sample/from-file                       controllers.SampleController.generateSampleFromFile(extractionRunId: String)

#GET /api/v1/sample/extract                         controllers.ExtractorController.extractSample()
#GET /api/v1/sample/extrdata                        controllers.ExtractorController.listExtractedData()



GET /api/v1/pages/revs                              controllers.PageController.listDownloadedData()
GET /api/v1/pages/:pageTitle/revs                   controllers.PageController.getPageRevsAsJson(pageTitle)
GET /api/v1/pages/:pageTitle/results                controllers.ExtractionResultsController.getExtractionRunResultsOfPage(extractionRunId, pageTitle)

GET /api/v1/pages/download                          controllers.PageController.updateDownloadedData
GET /api/v1/pages/:pageTitle/download               controllers.PageController.downloadSingleWikiPage(pageTitle)





GET /api/v1/events/latest                           controllers.EventsController.getLastNEvents(number: Int)


#GET /test/create/:name controllers.MongoTest.create(name)
#GET /test/list controllers.MongoTest.list
GET  /admin/config                       controllers.Application.config


# Map the JS resource paths
GET        /logs/*file                       controllers.Application.logFile(file)
GET        /data/*file                       controllers.Application.dataFile(file)

GET        /*file                            controllers.Assets.at(path="/public", file)

